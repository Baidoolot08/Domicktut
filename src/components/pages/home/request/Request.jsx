import React, { useState } from "react";
import "./Request.scss";
import requestImg from "../../../../assets/images/request.png";
import { toast, Slide, Bounce } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import axios from "axios";

const Request = () => {
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [cation, setCation] = useState("");
  const [modal, setModal] = useState(false);

  const clearForm = () => {
    setName("");
    setPhone("");
    setCation("");
  };

  const isEmpty = (val) => val.length === 0 || val.replaceAll(" ", "") === "";

  const sendToTelegram = () => {
    if (isEmpty(name) || isEmpty(phone) || isEmpty(cation)) {
      toast.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!", {
        position: "bottom-right",
        autoClose: 4000,
        theme: "colored",
        transition: Bounce,
      });
      return;
    }

    const chat_id = "-1002708842759";
    const token = "7784579498:AAE4SwLV99YhzCxGvp8so-GaYdzWdQb7WrU";
    const api_url = `https://api.telegram.org/bot${token}/sendMessage`;

    const userData = {
      chat_id,
      parse_mode: "HTML",
      text: `
<b>üßæ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b>\n
<b>üë§ –ò–º—è:</b> ${name}
<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}
<b>üí¨ –°–≤—è–∑—å:</b> ${cation}
      `,
    };

    axios
      .post(api_url, userData)
      .then(() => {
        toast.success("‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!", {
          position: "bottom-right",
          autoClose: 4000,
          theme: "colored",
          transition: Slide,
        });
        clearForm();
        setModal(false);
      })
      .catch(() => {
        toast.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", {
          position: "bottom-right",
          autoClose: 4000,
          theme: "colored",
          transition: Slide,
        });
      });
  };

  return (
    <div
      id="request"
      style={{
        background: `url("${requestImg}") no-repeat top/cover`,
      }}
    >
      <div className="container">
        <div className="request">
          <h1>–•–æ—Ç–∏—Ç–µ —Å–¥–∞—Ç—å –¥–æ–º?</h1>
          <p>
            –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏¬†–º—ã¬†—Å–≤—è–∂–µ–º—Å—è <br /> —Å¬†–≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
          </p>
          <button onClick={() => setModal(true)}>–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
        </div>
      </div>

      {modal && (
        <div className="logout-modal">
          <div className="logout-modal__content">
            <div className="logout-modal__buttons">
              <button class="a" onClick={() => setModal(false)}>
                X
              </button>
              <input
                type="text"
                placeholder="–í–∞—à–µ –∏–º—è"
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
              <input
                type="text"
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                value={phone}
                onChange={(e) => setPhone(e.target.value)}
              />
              <input
                type="text"
                placeholder="–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏"
                value={cation}
                onChange={(e) => setCation(e.target.value)}
              />
            </div>
            <button onClick={sendToTelegram}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Request;
